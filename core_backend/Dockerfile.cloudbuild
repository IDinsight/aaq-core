# The is the Dockerfile for the core_backend for GCP.
# It expects secrets to be passed in as build arguments and sets them as environment.
FROM python:3.10-slim-buster
LABEL maintainer="IDinsight"

ARG NAME=core_backend
ARG PORT=8000
ARG HOME_DIR=/usr/src/${NAME}

# Read and set secret environment variables
# IMPORTANT: You must pass all of the following args as build args.
ARG DOMAIN
ENV DOMAIN=${DOMAIN}

ARG POSTGRES_HOST
ARG POSTGRES_PASSWORD
ARG POSTGRES_USER=postgres
ARG POSTGRES_DB=postgres
ARG POSTGRES_PORT=5432
ENV POSTGRES_HOST=${POSTGRES_HOST}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_DB=${POSTGRES_DB}
ENV POSTGRES_PORT=${POSTGRES_PORT}

ARG ADMIN_USERNAME
ARG ADMIN_PASSWORD
ARG ADMIN_API_KEY
ENV USER1_USERNAME=${ADMIN_USERNAME}
ENV USER1_PASSWORD=${ADMIN_PASSWORD}
ENV USER1_API_KEY=${ADMIN_API_KEY}

ARG JWT_SECRET
ENV JWT_SECRET=${JWT_SECRET}

ARG NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID
ENV NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID}

ARG LANGFUSE_PUBLIC_KEY
ARG LANGFUSE_SECRET_KEY
ENV LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
ENV LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}

# Set other environment variables
ENV PROMETHEUS_MULTIPROC_DIR=/tmp
ENV LITELLM_ENDPOINT=http://litellm_proxy:4000
ENV LANGFUSE=True
ENV BACKEND_ROOT_PATH=/api

# Install dependencies
RUN apt-get update && apt-get install -y \
    gcc libpq-dev python3-dev jq dnsutils

RUN pip install --upgrade pip \
    && pip install --no-cache-dir awscli

# Create admin user
COPY add_users_to_db.py /add_users_to_db.py

# Install python dependencies
COPY requirements.txt /requirements.txt
RUN pip install -r /requirements.txt

# Create a user and set the working directory
RUN useradd -ms /bin/bash -d ${HOME_DIR} container_user
RUN chown -R container_user: ${HOME_DIR}

RUN mkdir /tmp/prometheus
RUN chown -R container_user: /tmp/prometheus

WORKDIR ${HOME_DIR}

COPY . ${HOME_DIR}

RUN ["chmod", "+x", "startup.sh"]

ENV PYTHONPATH "${PYTHONPATH}:${HOME_DIR}"
ENV PORT ${PORT}
EXPOSE ${PORT}

ENTRYPOINT ["./startup.sh"]
