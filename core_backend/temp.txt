testdb
testdb
Total reclaimed space: 0B
78ca6b562e604e3307ce0363399d6f3333fbfb4cae17494919728b4ac220b784
redis-test
redis-test
Total reclaimed space: 0B
26eedc8dbb45ce8bbf2955a27c2ffd0cf8aa7084759c6971e26305c594022f43
============================= test session starts ==============================
platform darwin -- Python 3.10.13, pytest-7.4.2, pluggy-1.4.0
rootdir: /Users/carlossamey/Documents/IdInsight/projects/google/temp/aaq-core
configfile: pyproject.toml
plugins: alembic-0.11.0, anyio-4.3.0, asyncio-0.23.2, xdist-3.5.0
asyncio: mode=auto
collected 388 items / 211 deselected / 177 selected

tests/api/test_admin.py .                                                [  0%]
tests/api/test_dashboard.py EEEEEEEEEEEEEEEEEE                           [ 10%]
tests/api/test_import_content.py EEEEEEEEEEEEEE                          [ 18%]
tests/api/test_manage_content.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE  [ 40%]
tests/api/test_manage_tags.py EEEEEEEEEEEEEEEEE                          [ 49%]
tests/api/test_manage_ud_rules.py EEEEEEEEEEEE                           [ 56%]
tests/api/test_question_answer.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 77%]
EEEEEEEEEEEEEEEEEEE                                                      [ 88%]
tests/api/test_urgency_detect.py EEEEEEEEE                               [ 93%]
tests/api/test_user_tools.py EEEE                                        [ 96%]
tests/api/test_users.py EEEEEEE                                          [100%]

==================================== ERRORS ====================================
_ ERROR at setup of TestUrgencyDetectionStats.test_urgency_detection_stats[urgency_detection0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionStats.test_urgency_detection_stats[urgency_detection1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionStats.test_urgency_detection_stats[urgency_detection2] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionStats.test_urgency_detection_stats[urgency_detection3] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
______________ ERROR at setup of TestQueryStats.test_query_stats _______________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__________ ERROR at setup of TestHeatmap.test_heatmap_day[week-week] ___________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_________ ERROR at setup of TestHeatmap.test_heatmap_day[month-month] __________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__________ ERROR at setup of TestHeatmap.test_heatmap_day[year-year] ___________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______________ ERROR at setup of TestHeatmap.test_heatmap_hour ________________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_____ ERROR at setup of TestTimeSeries.test_time_series[last_day-last_day] _____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____ ERROR at setup of TestTimeSeries.test_time_series[last_week-last_week] ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestTimeSeries.test_time_series[last_month-last_month] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____ ERROR at setup of TestTimeSeries.test_time_series[last_year-last_year] ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestTimeSeries.test_time_series_urgency[last_day-last_day] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestTimeSeries.test_time_series_urgency[last_week-last_week] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestTimeSeries.test_time_series_urgency[last_month-last_month] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestTimeSeries.test_time_series_urgency[last_year-last_year] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
______________ ERROR at setup of TestTopContent.test_top_content _______________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_________ ERROR at setup of TestImportContent.test_csv_import_success __________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_empty_csv-empty_data] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_no_rows-no_rows_csv] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_title_spaces_only-empty_title] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_text_spaces_only-empty_text] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_missing_columns-missing_columns] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_title_missing-empty_title] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_text_missing-empty_text] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_long_title-title_too_long] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_long_text-texts_too_long] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_duplicate_titles-duplicate_titles] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestImportContent.test_csv_import_checks[data_duplicate_texts-duplicate_texts] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestDBDuplicates.test_csv_import_db_duplicates[data_title_in_db-title_in_db] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestDBDuplicates.test_csv_import_db_duplicates[data_text_in_db-text_in_db] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestContentQuota.test_content_quota_integer[temp_user_token_and_quota0] _
ScopeMismatch: You tried to access the function scoped fixture client with a class scoped request object, involved factories:
core_backend/tests/api/test_manage_content.py:50:  def temp_user_token_and_quota(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, db_session: sqlalchemy.orm.session.Session) -> Generator[tuple[str, int], NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestContentQuota.test_content_quota_unlimited[temp_user_token_and_quota0] _
ScopeMismatch: You tried to access the function scoped fixture client with a class scoped request object, involved factories:
core_backend/tests/api/test_manage_content.py:50:  def temp_user_token_and_quota(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, db_session: sqlalchemy.orm.session.Session) -> Generator[tuple[str, int], NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestContentQuota.test_content_quota_integer[temp_user_token_and_quota1] _
ScopeMismatch: You tried to access the function scoped fixture client with a class scoped request object, involved factories:
core_backend/tests/api/test_manage_content.py:50:  def temp_user_token_and_quota(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, db_session: sqlalchemy.orm.session.Session) -> Generator[tuple[str, int], NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestContentQuota.test_content_quota_integer[temp_user_token_and_quota2] _
ScopeMismatch: You tried to access the function scoped fixture client with a class scoped request object, involved factories:
core_backend/tests/api/test_manage_content.py:50:  def temp_user_token_and_quota(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, db_session: sqlalchemy.orm.session.Session) -> Generator[tuple[str, int], NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_create_and_delete_content[Tag1-title 3-test content 3-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_create_and_delete_content[Tag1-title 2-test content 2-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[Tag1-existing_content_id0-test content 3 title - edited-test content 3 - edited-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[Tag1-existing_content_id0-test content 4 title - edited-test content 4 - edited-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[Tag1-existing_content_id1-test content 3 title - edited-test content 3 - edited-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[Tag1-existing_content_id1-test content 4 title - edited-test content 4 - edited-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_list_content[Tag1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_list_content[Tag1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_delete_content[Tag1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_delete_content[Tag1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_get_user1_content[Tag1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_get_user1_content[Tag1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_edit_user1_content[Tag1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_edit_user1_content[Tag1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_delete_user1_content[Tag1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_delete_user1_content[Tag1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_create_and_delete_content[existing_tag_id1-title 3-test content 3-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_create_and_delete_content[existing_tag_id1-title 2-test content 2-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[existing_tag_id1-existing_content_id0-test content 3 title - edited-test content 3 - edited-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[existing_tag_id1-existing_content_id0-test content 4 title - edited-test content 4 - edited-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[existing_tag_id1-existing_content_id1-test content 3 title - edited-test content 3 - edited-content_metadata0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_edit_and_retrieve_content[existing_tag_id1-existing_content_id1-test content 4 title - edited-test content 4 - edited-content_metadata1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_list_content[existing_tag_id1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_list_content[existing_tag_id1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_delete_content[existing_tag_id1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestManageContent.test_delete_content[existing_tag_id1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_get_user1_content[existing_tag_id1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_get_user1_content[existing_tag_id1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_edit_user1_content[existing_tag_id1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_edit_user1_content[existing_tag_id1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_delete_user1_content[existing_tag_id1-existing_content_id0] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_ ERROR at setup of TestMultUserManageContent.test_user2_delete_user1_content[existing_tag_id1-existing_content_id1] _
ScopeMismatch: You tried to access the function scoped fixture client with a module scoped request object, involved factories:
core_backend/tests/api/conftest.py:175:  def existing_tag_id(request: _pytest.fixtures.FixtureRequest, client: starlette.testclient.TestClient, fullaccess_token: str) -> Generator[str, NoneType, NoneType]
core_backend/tests/api/conftest.py:238:  def client(patch_llm_call: _pytest.fixtures.FixtureRequest) -> Generator[starlette.testclient.TestClient, NoneType, NoneType]
_______ ERROR at setup of TestManageContent.test_edit_content_not_found ________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______________ ERROR at setup of test_convert_record_to_schema ________________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____ ERROR at setup of TestManageTags.test_create_and_delete_tag[tag_first] ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestManageTags.test_create_and_delete_tag[tag_second] ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageTags.test_edit_and_retrieve_tag[Tag1-TAG_FIRST] __

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageTags.test_edit_and_retrieve_tag[Tag1-TAG_SECOND] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageTags.test_edit_and_retrieve_tag[existing_tag_id1-TAG_FIRST] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageTags.test_edit_and_retrieve_tag[existing_tag_id1-TAG_SECOND] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___________ ERROR at setup of TestManageTags.test_edit_tag_not_found ___________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_____________ ERROR at setup of TestManageTags.test_list_tag[Tag1] _____________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______ ERROR at setup of TestManageTags.test_list_tag[existing_tag_id1] _______

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestManageTags.test_add_tag_same_name_fails[TAG1-TAG1] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestManageTags.test_add_tag_same_name_fails[Tag2-TAG2] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____________ ERROR at setup of TestManageTags.test_delete_tag[Tag1] ____________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
______ ERROR at setup of TestManageTags.test_delete_tag[existing_tag_id1] ______

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____ ERROR at setup of TestManageTags.test_user2_get_user1_tag_fails[Tag1] _____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageTags.test_user2_get_user1_tag_fails[existing_tag_id1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_____ ERROR at setup of TestManageTags.test_add_tag_user1_edit_user2_fails _____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______________ ERROR at setup of test_convert_record_to_schema ________________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_create_and_delete_UDrules[test rule 3-urgency_rule_metadata0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_create_and_delete_UDrules[test rule 4-urgency_rule_metadata1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_edit_and_retrieve_UDrules[existing_rule_id0-test rule 3 - edited-urgency_rule_metadata0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_edit_and_retrieve_UDrules[existing_rule_id0-test rule 4 - edited-urgency_rule_metadata1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_edit_and_retrieve_UDrules[existing_rule_id1-test rule 3 - edited-urgency_rule_metadata0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestManageUDRules.test_edit_and_retrieve_UDrules[existing_rule_id1-test rule 4 - edited-urgency_rule_metadata1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______ ERROR at setup of TestManageUDRules.test_edit_UDrules_not_found ________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestManageUDRules.test_list_UDrules[existing_rule_id0] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestManageUDRules.test_list_UDrules[existing_rule_id1] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__ ERROR at setup of TestManageUDRules.test_delete_UDrules[existing_rule_id0] __

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__ ERROR at setup of TestManageUDRules.test_delete_UDrules[existing_rule_id1] __

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______________ ERROR at setup of test_convert_record_to_schema ________________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_llm_quota_integer[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_llm_quota_integer[temp_user_api_key_and_api_quota1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_llm_quota_integer[temp_user_api_key_and_api_quota2] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_embeddings_quota_integer[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_embeddings_quota_integer[temp_user_api_key_and_api_quota1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_embeddings_quota_integer[temp_user_api_key_and_api_quota2] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_mix_quota_integer[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_mix_quota_integer[temp_user_api_key_and_api_quota1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_call_mix_quota_integer[temp_user_api_key_and_api_quota2] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_api_quota_unlimited[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_reset_api_quota_works[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestApiCallQuota.test_reset_api_quota_fail[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_content_response[api_key_incorrect-401] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_content_response[api_key_correct-200] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_correct_token[incorrect-401-/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_correct_token[correct-200-/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_correct_token[incorrect-401-/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_correct_token[correct-200-/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_secret[/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_secret[/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_query_id[/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_query_id[/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_sentiment[/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_incorrect_sentiment[/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_sentiment_only[/response-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_response_feedback_sentiment_only[/content-feedback] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_user2_access_user1_content[test_username-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_user2_access_user1_content[test_username_2-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_content_feedback_check_content_id[True-200] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestEmbeddingsSearch.test_content_feedback_check_content_id[False-400] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestGenerateResponse.test_llm_response[incorrect-401] ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____ ERROR at setup of TestGenerateResponse.test_llm_response[correct-200] _____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestGenerateResponse.test_user2_access_user1_content[test_username-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestGenerateResponse.test_user2_access_user1_content[test_username_2-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[ENGLISH-False-None] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[HINDI-False-None] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[UNINTELLIGIBLE-True-unintelligible_input] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[GIBBERISH-True-unsupported_language] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[UNSUPPORTED-True-unsupported_language] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[SOME_UNSUPPORTED_LANG-True-unsupported_language] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_language_identify_error[don't kow-True-unsupported_language] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_translate_error[ENGLISH-False-None] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_translate_error[HINDI-False-None] __

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_translate_before_language_id_errors _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestErrorResponses.test_unsafe_query_error[SAFE-False] ___

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_unsafe_query_error[INAPPROPRIATE_LANGUAGE-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_unsafe_query_error[PROMPT_INJECTION-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[ON_TOPIC-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[UNKNOWN-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[OFF_TOPIC-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[on topic-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[Off_Topic-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[Sorry..-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestErrorResponses.test_off_topic_query_error[This is off topic-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______ ERROR at setup of TestAlignScore.test_score_less_than_threshold ________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
______ ERROR at setup of TestAlignScore.test_score_greater_than_threshold ______

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_____________ ERROR at setup of TestAlignScore.test_build_evidence _____________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionApiLimit.test_api_call_ud_quota_integer[temp_user_api_key_and_api_quota0] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionApiLimit.test_api_call_ud_quota_integer[temp_user_api_key_and_api_quota1] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionApiLimit.test_api_call_ud_quota_integer[temp_user_api_key_and_api_quota2] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionToken.test_ud_response[api_key_incorrect-401] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionToken.test_ud_response[api_key_correct-200] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionToken.test_user2_access_user1_rules[test_username-True] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyDetectionToken.test_user2_access_user1_rules[test_username_2-False] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyClassifiers.test_classifier[cosine_distance_classifier] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_ ERROR at setup of TestUrgencyClassifiers.test_classifier[llm_entailment_classifier] _

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__________ ERROR at setup of TestUserCreation.test_admin_create_user ___________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___ ERROR at setup of TestUserCreation.test_admin_create_user_existing_user ____

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
________ ERROR at setup of TestUserCreation.test_non_admin_create_user _________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
___________ ERROR at setup of TestKeyManagement.test_get_new_api_key ___________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_______________ ERROR at setup of TestUsers.test_save_user_to_db _______________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
________ ERROR at setup of TestUsers.test_save_user_to_db_existing_user ________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
____________ ERROR at setup of TestUsers.test_get_user_by_username _____________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
________ ERROR at setup of TestUsers.test_get_user_by_username_no_user _________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
______________ ERROR at setup of TestUsers.test_get_user_by_token ______________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
__________ ERROR at setup of TestUsers.test_get_user_by_token_no_user __________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
_____________ ERROR at setup of TestUsers.test_update_user_api_key _____________

patch_llm_call = None

    @pytest.fixture(scope="function")
    def client(patch_llm_call: pytest.FixtureRequest) -> Generator[TestClient, None, None]:
        app = create_app()
>       with TestClient(app) as c:

tests/api/conftest.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:754: in __enter__
    portal.call(self.wait_startup)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:458: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:783: in wait_startup
    message = await receive()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:780: in receive
    self.task.result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:451: in result
    return self.__get_result()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/concurrent/futures/_base.py:403: in __get_result
    raise self._exception
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/testclient.py:770: in lifespan
    await self.app(scope, self.stream_receive.receive, self.stream_send.send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:122: in __call__
    self.middleware_stack = self.build_middleware_stack()
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/starlette/applications.py:109: in build_middleware_stack
    app = cls(app=app, *args, **kwargs)
app/prometheus_middleware.py:21: in __init__
    self.counter = Counter(
/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/metrics.py:155: in __init__
    registry.register(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <prometheus_client.registry.CollectorRegistry object at 0x1071c9420>
collector = prometheus_client.metrics.Counter(requests)

    def register(self, collector: Collector) -> None:
        """Add a collector to the registry."""
        with self._lock:
            names = self._get_names(collector)
            duplicates = set(self._names_to_collectors).intersection(names)
            if duplicates:
>               raise ValueError(
                    'Duplicated timeseries in CollectorRegistry: {}'.format(
                        duplicates))
E               ValueError: Duplicated timeseries in CollectorRegistry: {'requests_created', 'requests_total', 'requests'}

/Users/carlossamey/anaconda3/envs/aaq-core/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
==================================== PASSES ====================================
_______________________________ test_healthcheck _______________________________
---------------------------- Captured stderr setup -----------------------------
07/25/2024 02:29:12 PM          __init__.py 117 : Application started
07/25/2024 02:29:12 PM          __init__.py 107 : Successfully Synced Redis to database
------------------------------ Captured log setup ------------------------------
INFO     core_backend.app.utils:__init__.py:117 Application started
INFO     core_backend.app.utils:__init__.py:107 Successfully Synced Redis to database
================ 1 passed, 211 deselected, 176 errors in 19.77s ================
