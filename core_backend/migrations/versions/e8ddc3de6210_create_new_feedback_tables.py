"""create new feedback tables

Revision ID: e8ddc3de6210
Revises: f269c75dbf69
Create Date: 2024-04-19 15:36:53.671146

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e8ddc3de6210"
down_revision: Union[str, None] = "f269c75dbf69"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "content-feedback",
        sa.Column("feedback_id", sa.Integer(), nullable=False),
        sa.Column("feedback_sentiment", sa.String(), nullable=True),
        sa.Column("query_id", sa.Integer(), nullable=False),
        sa.Column("feedback_text", sa.String(), nullable=True),
        sa.Column("feedback_datetime_utc", sa.DateTime(), nullable=False),
        sa.Column("content_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["content.content_id"],
        ),
        sa.ForeignKeyConstraint(
            ["query_id"],
            ["query.query_id"],
        ),
        sa.PrimaryKeyConstraint("feedback_id"),
    )
    op.create_index(
        op.f("ix_content-feedback_feedback_id"),
        "content-feedback",
        ["feedback_id"],
        unique=False,
    )
    op.create_table(
        "query-response-feedback",
        sa.Column("feedback_id", sa.Integer(), nullable=False),
        sa.Column("feedback_sentiment", sa.String(), nullable=True),
        sa.Column("query_id", sa.Integer(), nullable=False),
        sa.Column("feedback_text", sa.String(), nullable=True),
        sa.Column("feedback_datetime_utc", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["query_id"],
            ["query.query_id"],
        ),
        sa.PrimaryKeyConstraint("feedback_id"),
    )
    op.create_index(
        op.f("ix_query-response-feedback_feedback_id"),
        "query-response-feedback",
        ["feedback_id"],
        unique=False,
    )
    op.drop_index("ix_feedback_feedback_id", table_name="feedback")
    op.drop_table("feedback")
    op.add_column("content", sa.Column("positive_votes", sa.Integer(), nullable=False))
    op.add_column("content", sa.Column("negative_votes", sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("content", "negative_votes")
    op.drop_column("content", "positive_votes")
    op.create_table(
        "feedback",
        sa.Column("feedback_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("query_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("feedback_text", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "feedback_datetime_utc",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "feedback_sentiment", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["query_id"], ["query.query_id"], name="feedback_query_id_fkey"
        ),
        sa.PrimaryKeyConstraint("feedback_id", name="feedback_pkey"),
    )
    op.create_index(
        "ix_feedback_feedback_id", "feedback", ["feedback_id"], unique=False
    )
    op.drop_index(
        op.f("ix_query-response-feedback_feedback_id"),
        table_name="query-response-feedback",
    )
    op.drop_table("query-response-feedback")
    op.drop_index(
        op.f("ix_content-feedback_feedback_id"), table_name="content-feedback"
    )
    op.drop_table("content-feedback")
    # ### end Alembic commands ###
