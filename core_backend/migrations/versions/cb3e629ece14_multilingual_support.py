"""multilingual support

Revision ID: cb3e629ece14
Revises: f269c75dbf69
Create Date: 2024-03-05 20:05:31.194176

"""

from typing import Sequence, Union

import pgvector
import sqlalchemy as sa
from alembic import op
from app.configs.app_config import (
    PGVECTOR_DISTANCE,
    PGVECTOR_EF_CONSTRUCTION,
    PGVECTOR_M,
)
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "cb3e629ece14"
down_revision: Union[str, None] = "f269c75dbf69"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "contents",
        sa.Column("content_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("content_id"),
    )
    op.create_table(
        "languages",
        sa.Column("language_id", sa.Integer(), nullable=False),
        sa.Column("language_name", sa.String(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("created_datetime_utc", sa.DateTime(), nullable=False),
        sa.Column("updated_datetime_utc", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("language_id"),
    )
    op.create_index(
        "ix_languages_is_default_true",
        "languages",
        ["is_default"],
        unique=True,
        postgresql_where=sa.text("is_default IS true"),
    )
    op.create_table(
        "content_texts",
        sa.Column("content_text_id", sa.Integer(), nullable=False),
        sa.Column(
            "content_embedding", pgvector.sqlalchemy.Vector(dim=1536), nullable=False
        ),
        sa.Column("content_title", sa.String(length=150), nullable=False),
        sa.Column("content_text", sa.String(length=2000), nullable=False),
        sa.Column("created_datetime_utc", sa.DateTime(), nullable=False),
        sa.Column("updated_datetime_utc", sa.DateTime(), nullable=False),
        sa.Column("content_metadata", sa.JSON(), nullable=False),
        sa.Column("language_id", sa.Integer(), nullable=False),
        sa.Column("content_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["contents.content_id"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["languages.language_id"],
        ),
        sa.PrimaryKeyConstraint("content_text_id"),
    )
    op.drop_index(
        "content_idx",
        table_name="content",
        postgresql_with={"m": "16", "ef_construction": "64"},
        postgresql_using="hnsw",
    )
    op.execute(
        f"""CREATE INDEX content_idx ON content_texts
        USING hnsw (content_embedding {PGVECTOR_DISTANCE})
        WITH (m = {PGVECTOR_M}, ef_construction = {PGVECTOR_EF_CONSTRUCTION})"""
    )
    op.drop_table("content")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "content",
        sa.Column("content_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "content_embedding",
            pgvector.sqlalchemy.Vector(dim=1536),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "content_title", sa.VARCHAR(length=150), autoincrement=False, nullable=False
        ),
        sa.Column(
            "content_text", sa.VARCHAR(length=2000), autoincrement=False, nullable=False
        ),
        sa.Column(
            "content_language", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "content_metadata",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_datetime_utc",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_datetime_utc",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("content_id", name="content_pkey"),
    )
    op.drop_index(
        "ix_languages_is_default_true",
        table_name="languages",
        postgresql_where=sa.text("is_default IS true"),
    )
    op.execute(
        f"""CREATE INDEX content_idx ON content
        USING hnsw (content_embedding {PGVECTOR_DISTANCE})
        WITH (m = {PGVECTOR_M}, ef_construction = {PGVECTOR_EF_CONSTRUCTION})"""
    )

    op.drop_table("content_texts")
    op.drop_table("languages")
    op.drop_table("contents")
    # ### end Alembic commands ###
