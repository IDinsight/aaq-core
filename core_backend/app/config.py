import os

LOG_LEVEL = os.environ.get("LOG_LEVEL", "INFO")

# Root domain
DOMAIN = os.environ.get("DOMAIN", "localhost")

# Postgres variables
POSTGRES_USER = os.environ.get("POSTGRES_USER", "postgres")
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD", "postgres")
POSTGRES_HOST = os.environ.get("POSTGRES_HOST", "localhost")
POSTGRES_PORT = os.environ.get("POSTGRES_PORT", "5432")
POSTGRES_DB = os.environ.get("POSTGRES_DB", "postgres")


# LLM variables
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")  # Will be none if not set
LITELLM_EMBEDDING_MODEL = os.environ.get(
    "LITELLM_EMBEDDING_MODEL", "text-embedding-ada-002"
)
# default LLM endpoint + model
LITELLM_MODEL_DEFAULT = os.environ.get("LITELLM_MODEL_DEFAULT", "gpt-4-1106-preview")
LITELLM_ENDPOINT_DEFAULT = os.environ.get("LITELLM_ENDPOINT_DEFAULT", None)
# summarization
LITELLM_MODEL_SUMMARIZATION = os.environ.get(
    "LITELLM_MODEL_SUMMARIZATION", LITELLM_MODEL_DEFAULT
)
LITELLM_ENDPOINT_SUMMARIZATION = os.environ.get(
    "SUMMARISE_LITELLM_ENDPOINT", LITELLM_ENDPOINT_DEFAULT
)
# language detection
LITELLM_MODEL_LANGUAGE_DETECT = os.environ.get(
    "LITELLM_MODEL_LANGUAGE_DETECT", LITELLM_MODEL_DEFAULT
)
LITELLM_ENDPOINT_LANGUAGE_DETECT = os.environ.get(
    "LITELLM_ENDPOINT_LANGUAGE_DETECT", LITELLM_ENDPOINT_DEFAULT
)
# translation
LITELLM_MODEL_TRANSLATE = os.environ.get(
    "LITELLM_MODEL_TRANSLATE", LITELLM_MODEL_DEFAULT
)
LITELLM_ENDPOINT_TRANSLATE = os.environ.get(
    "LITELLM_ENDPOINT_TRANSLATE", LITELLM_ENDPOINT_DEFAULT
)
# safety check
LITELLM_MODEL_SAFETY = os.environ.get("LITELLM_MODEL_SAFETY", LITELLM_MODEL_DEFAULT)
LITELLM_ENDPOINT_SAFETY = os.environ.get(
    "LITELLM_ENDPOINT_SAFETY", LITELLM_ENDPOINT_DEFAULT
)
# paraphrase
LITELLM_MODEL_PARAPHRASE = os.environ.get(
    "LITELLM_MODEL_PARAPHRASE", LITELLM_MODEL_DEFAULT
)
LITELLM_ENDPOINT_PARAPHRASE = os.environ.get(
    "LITELLM_ENDPOINT_PARAPHRASE", LITELLM_ENDPOINT_DEFAULT
)

# Alignment Score: LLM, AlignScore, or None
ALIGN_SCORE_METHOD = os.environ.get("ALIGN_SCORE_METHOD", "LLM")
ALIGN_SCORE_THRESHOLD = os.environ.get("ALIGN_SCORE_THRESHOLD", 0.7)
# if LLM
LITELLM_MODEL_ALIGNSCORE = os.environ.get(
    "LITELLM_MODEL_ALIGNSCORE", LITELLM_MODEL_DEFAULT
)
LITELLM_ENDPOINT_ALIGNSCORE = os.environ.get(
    "LITELLM_ENDPOINT_ALIGNSCORE", LITELLM_ENDPOINT_DEFAULT
)
# if AlignScore
ALIGN_SCORE_API = os.environ.get("ALIGN_SCORE_API")

# Backend paths
BACKEND_ROOT_PATH = os.environ.get("BACKEND_ROOT_PATH", "")
