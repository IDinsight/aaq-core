version: "3"
services:
  core_backend:
    image: idinsight/aaq-backend:latest
    build:
      context: ../core_backend
      dockerfile: Dockerfile
    command: >
      /bin/sh startup.sh
    restart: always
    env_file:
      - .env
    volumes:
      - local_dynamic_storage:/home/storage
  admin_app:
    image: idinsight/aaq-admin-app:latest
    build:
      context: ../admin_app
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    command: >
      npm start
    depends_on:
      - core_backend
    restart: always
    env_file:
      - .env
  nginx:
    image: nginx:1.25-alpine
    restart: always
    depends_on:
      - core_backend
      - admin_app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: >
      /bin/sh -c "envsubst '$$\{DOMAIN\}' < /etc/nginx/conf.d/app.conf.template > /etc/nginx/conf.d/app.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\""
    env_file:
      - .env.nginx
  certbot:
    image: certbot/certbot:v2.8.0
    restart: always
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  alignScore:
    image: idinsight/alignscore-base:latest
    profiles:
      - alignScore
      - optional-components
    build:
      context: ../optional_components/alignScore
      dockerfile: Dockerfile
    command: >
      /usr/local/bin/python server.py --port=5001 --models=base
    restart: always

volumes:
  local_dynamic_storage:
