version: "3"
services:
  core_backend:
    image: idinsight/aaq-backend:latest
    build:
      context: ../core_backend
      dockerfile: Dockerfile
    command: >
      /bin/sh startup.sh
    depends_on:
      - vector_db
    restart: always
    env_file:
      - .env
    environment:
      - QDRANT_HOST=vector_db
    volumes:
      - local_dynamic_storage:/home/storage
  vector_db:
    image: qdrant/qdrant:v1.5.1
    restart: always
    env_file:
      - .env
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
    volumes:
      - qdrant_volume:/qdrant/storage
  admin_app:
    image: idinsight/aaq-admin-app:latest
    build:
      context: ../admin_app
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    command: >
      npm start
    depends_on:
      - core_backend
    restart: always
    env_file:
      - .env
  caddy:
    image: caddy:2.7.6
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    env_file:
      - .env
  alignScore:
    image: idinsight/alignscore-base:latest
    profiles:
      - alignScore
      - optional-components
    build:
      context: ../optional_components/alignScore
      dockerfile: Dockerfile
    command: >
      /usr/local/bin/python server.py --port=5001 --models=base
    restart: always
volumes:
  local_dynamic_storage:
  qdrant_volume:
  caddy_data:
  caddy_config:
