services:
  core_backend:
    image: idinsight/aaq-backend:latest
    build:
      context: ../../core_backend
      dockerfile: Dockerfile
    command: >
      /bin/sh startup.sh
    restart: always
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: ../../core_backend

  admin_app:
    image: idinsight/aaq-admin-app:latest
    build:
      context: ../../admin_app
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
        NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID: ${NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID}
    command: >
      node server.js
    depends_on:
      - core_backend
    restart: always
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: ../../admin_app

  caddy:
    image: caddy:2.7.6
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    env_file:
      - .env

  litellm_proxy:
    image: ghcr.io/berriai/litellm:main-v1.34.6
    restart: always
    env_file:
      - .env
    volumes:
      - ./litellm_proxy_config.yaml:/app/config.yaml
    command:
      ["--config", "/app/config.yaml", "--port", "4000", "--num_workers", "1"]

  alignScore:
    image: idinsight/alignscore-base:latest
    profiles:
      - alignScore
      - optional-components
    build:
      context: ../../optional_components/alignScore
      dockerfile: Dockerfile
    command: >
      /usr/local/bin/python server.py --port=5001 --models=base
    restart: always
  embeddings:
    image: idinsight/embeddings:latest
    profiles:
      - embeddings
      - optional-components
    build:
      context: ../../optional_components/embeddings
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: ../../optional_components/embeddings
volumes:
  caddy_data:
  caddy_config:
